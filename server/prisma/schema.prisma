datasource postgres {
  provider = "postgresql"
  url      = env("POSTGRESQL_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  avatar    String?
  createdAt DateTime @default(now())
  firstName String?
  id        String   @id @default(cuid())
  lastName  String?
  orders    Order[]
  password  String
  roles     String[]
  updatedAt DateTime @updatedAt
  username  String   @unique
}

model Order {
  administrator   User?           @relation(fields: [administratorId], references: [id])
  administratorId String?
  createdAt       DateTime        @default(now())
  customer        Customer?       @relation(fields: [customerId], references: [id])
  customerId      String?
  discount        Float?
  id              String          @id @default(cuid())
  quantity        Int?
  service         Service?        @relation(fields: [serviceId], references: [id])
  serviceId       String?
  status          EnumOrderStatus
  totalPrice      Int?
  updatedAt       DateTime        @updatedAt
}

model Customer {
  address   Address? @relation(fields: [addressId], references: [id])
  addressId String?
  createdAt DateTime @default(now())
  email     String?
  firstName String?
  id        String   @id @default(cuid())
  lastName  String?
  orders    Order[]
  phone     String?
  updatedAt DateTime @updatedAt
}

model Address {
  address_1 String?
  address_2 String?
  city      String?
  createdAt DateTime   @default(now())
  customers Customer[]
  id        String     @id @default(cuid())
  state     String?
  updatedAt DateTime   @updatedAt
  zip       Int?
}

model Service {
  createdAt   DateTime @default(now())
  description String?
  id          String   @id @default(cuid())
  itemPrice   Float?
  name        String?
  orders      Order[]
  updatedAt   DateTime @updatedAt
}

enum EnumOrderStatus {
  EarlyCheck
  Confirmation
  Processed
  Ready
  Completed
  InQueue
}